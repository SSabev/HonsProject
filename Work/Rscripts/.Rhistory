writeLines(partition)
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
View(dt)
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30 + 1
writeLines(num)
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
parition <- 4 - as.integer(i/133)
writeLines(partition)
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30 + 1
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
parition <- 4 - as.integer(i/133)
writeLines(partition)
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
View(dt)
num <- i - 30 + 1
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
df_arima
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
parition <- 4 - as.integer(i/133)
writeLines(partition)
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
dt
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
parition <- 4 - as.integer(i/133)
writeLines(partition)
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
parition <- 4 - as.integer(i/133)
writeLines("The quanttile we're looking at is ", quantiles[partition])
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
parition <- 4 - as.integer(i/133)
writeLines(paste("The quanttile we're looking at is ", quantiles[partition]))
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
df$quant <- factor(findInterval(df$x,quantiles))
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
parition <- 4 - as.integer(i/133)
writeLines(paste("The quanttile we're looking at is ", quantiles[partition]))
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
df$quant <- factor(findInterval(df$x,quantiles))
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
parition <- 4 - as.integer(i/133)
writeLines(paste("The quanttile we're looking at is ", quantiles[partition]))
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
df$quant <- factor(findInterval(df$x,quantiles))
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
parition <- 4 - as.integer(i/133)
writeLines(paste("The quanttile we're looking at is ", quantiles[partition]))
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
df_arima
View(df_arima)
mean(df_arima$Error)
stdev(df_arima$Error)
library(ggplot2)
library(forecast)
library(zoo)
library("TTR")
library('hydroGOF')
library('changepoint')
setwd('Dev/HonsProject/Work/Rscripts')
# Get all the errors
i <- 'Sochi'
place <- i
file <- paste(i,".csv", sep="")
data <- read.zoo(file=file, sep = ",", header = TRUE,
index = 1:1, tz = "", format = "%Y-%m-%d")
place_ts <- ts(data$Searches)
plot.ts(place_ts)
df_arima <- data.frame(Predicted=NA, Actual=NA, Error=NA, ChangePoint=NA)
for(i in 30:430){
arima <- arima(place_ts[1:i], order=c(4,1,5), method='ML')
forecast <- forecast.Arima(arima, h=1)
predicted_vals <- forecast$mean
actual_vals <- place_ts[i:i+1]
error <- predicted_vals - actual_vals
writeLines(paste(i, " ", error))
changepoint <- 0
if(i > 35){
df_arima <- df_arima[complete.cases(df_arima), ]
num <- i - 30
writeLines(paste("WE have x lines" , num))
dt <- data.frame(x=c(1:num),y=df_arima$Error)
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.97, 0.98, 0.99)
quantiles <- quantile(dt$y, prob=probs)
df$quant <- factor(findInterval(df$x,quantiles))
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
parition <- 4 - as.integer(i/133)
writeLines(paste("The quanttile we're looking at is ", quantiles[partition]))
writeLines(paste("The mean of the error is " , mean(df_arima$Error), " and the stdev is ", sd(df_arima$Error) ))
if (error > quantiles[partition]){
writeLines('CHANGEPOINT')
changepoint <- 1
}
}
df_arima <- rbind(df_arima, c(predicted_vals, actual_vals, error, changepoint))
}
df_arima <- df_arima[complete.cases(df_arima), ]
# plot them all and find the quantiles
df_arima
plot(df_arima$Actual)
plot(lines(df_arima$Actual))
ggplot(data=df_arima, aes(y=Actual))
ggplot(data=df_arima, aes(y=Actual)) + geom_line()
ggplot(data=df_arima, aes(y=Actual, x=c(1..400))) + geom_line()
df_arima$index
ggplot(data=df_arima, aes(y=Actual, x=Predicted) + geom_point()
)
ggplot(data=df_arima, aes(y=Actual, x=Predicted)) + geom_point()
data
df_arima$Time <- data$
Time
df_arima
data
df$index
data$index
data$
data
df <- read.csv(file = 'Sochi.csv')
df
df <- df[c(30,430),]
df
df <- df[c(30..430),]
df <- read.csv(file = 'Sochi.csv')
df <- df[c(30..430),]
df <- df[c(30:430),]
df
df_arima$Time <- df$Date
df <- df[c(1:400),]
df
df_arima$Time <- df$Date
library(reshape)
library.package(melt)
install.packages(reshape)
install.packages('reshape')
install.packages("reshape")
install.packages('reshape')
install.packages(reshape)
df_arima <- melt(df_arima)
df_arima <- melt(df_arima)
