xlab("Number of hashtags/twitter counts") + ylab("Time") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess') +
theme(axis.text.x=element_text(size=15))
stdevdata <- read.csv('../results/stdevscatter2.csv')
drops <- c("Place", "RMSE.TwitterDF", "RMSE.TwitterCF", "RMSE_L4F")
stdevdata <- stdevdata[,!(names(stdevdata) %in% drops)]
stdevdata$CFImprove <- as.numeric(stdevdata$CFImprove)
stdevdata$DFImprove <- as.numeric(stdevdata$DFImprove)
stdevdata <- stdevdata[complete.cases(stdevdata), ]
#stdevdata <- do.call(stdevdata,lapply(stdevdata, function(x) replace(x, is.infinite(x),NA)))
stdevdata <- melt(stdevdata, id.vars=c("StDev"))
ggplot(data=stdevdata, aes(x=StDev, y=value, group=variable, colour=variable)) +
geom_point(aes(size=StDev)) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
#scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("Standard deviation of searches divided by the mean") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ") +
stat_smooth(method='loess')
data <- read.csv('../results/lasso-static-and-dynamic.csv')
data <- data[complete.cases(data), ]
data <- do.call(data,lapply(data, function(x) replace(x, is.infinite(x),NA)))
data$RMSE.TwitterDF <- as.numeric(data$RMSE.TwitterDF)
data$RMSE.TwitterCF <- as.numeric(data$RMSE.TwitterCF)
data$RMSE_L4F <- as.numeric(data$RMSE_L4F)
max.val <- max(data$RMSE.TwitterCF)
nx = seq(1, max.val-1, by=max.val/1367)
ny = seq(1, max.val-1, by=max.val/1367)
ggplot(data=data, aes(x=RMSE_L4F, y=RMSE.TwitterDF)) +
geom_point(size=2, colour = "#EE82EE") +
geom_line(aes(x=nx, y=ny), size=1, colour="#4B0082")+
#scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
scale_x_log10() + scale_y_log10() +
xlab("Root mean squared error from the L4F") +
ylab("Root mean squared error from TwitterDF") +
ggtitle("RMSE scatter plot of classifiers")
#stat_smooth(method='lm')
keeps <- c( "RMSE.TwitterDF", "RMSE_L4F", "RMSE.TwitterCF")
data <- data[(names(data) %in% keeps)]
data <- melt(data, id.vars=c("RMSE_L4F"))
ggplot(data=data, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(variable ~ .) +
#geom_line(aes(x=nx, y=ny), colour="#4B0082")+
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Root mean squared error from the L4F regression") +
ylab("Root mean squared error from the Twitter regressions") +
ggtitle("RMSE scatter plot of classifiers") +
stat_smooth(method='lm')
data <- read.csv('../tidydata/joined/London.csv')
data <- data[complete.cases(data), ]
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
keeps <- c( "Count", "Date", "NSearches")
data <- data[(names(data) %in% keeps)]
df <- melt(data, id.vars=c("Date"))
ggplot(data=df, aes(x=Date, y=value, colour = varible, group=variable))+
geom_line(colour = '#00BFFF', size=1) + facet_grid(variable ~ ., scales="free") +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
ggtitle("Plot of New York tweets and searches over time") +
ylab("Searches and Tweets") +
xlab('Normalised searches to New York and tweets about New York') +
theme(axis.text.x=element_text(size=15))
city <- 'London'
file <- paste('../tidydata/joined/', i, sep='')
file <- paste(file, '.csv',sep='')
data <- read.csv(file)
data <- data[complete.cases(data), ]
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
keeps <- c( "Count", "Date", "NSearches")
data <- data[(names(data) %in% keeps)]
df <- melt(data, id.vars=c("Date"))
ggplot(data=df, aes(x=Date, y=value, colour = varible, group=variable))+
geom_line(colour = '#00BFFF', size=1) + facet_grid(variable ~ ., scales="free") +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
ggtitle("Plot of London tweets and searches over time") +
ylab("Searches and Tweets") +
xlab('Normalised searches to London  and tweets about London') +
theme(axis.text.x=element_text(size=15))
#  scale_x_date(labels = date_format("%m-%Y"))
city <- 'London'
file <- paste('../tidydata/joined/', city, sep='')
file <- paste(file, '.csv',sep='')
data <- read.csv(file)
data <- data[complete.cases(data), ]
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
keeps <- c( "Count", "Date", "NSearches")
data <- data[(names(data) %in% keeps)]
df <- melt(data, id.vars=c("Date"))
ggplot(data=df, aes(x=Date, y=value, colour = varible, group=variable))+
geom_line(colour = '#00BFFF', size=1) + facet_grid(variable ~ ., scales="free") +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
ggtitle("Plot of London tweets and searches over time") +
ylab("Searches and Tweets") +
xlab('Normalised searches to London  and tweets about London') +
theme(axis.text.x=element_text(size=15))
#  scale_x_date(labels = date_format("%m-%Y"))
city <- 'London'
file <- paste('../tidydata/joined/', city, sep='')
file <- paste(file, '.csv',sep='')
data <- read.csv(file)
data <- data[complete.cases(data), ]
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
keeps <- c( "Count", "Date", "NSearches")
data <- data[(names(data) %in% keeps)]
df <- melt(data, id.vars=c("Date"))
ggplot(data=df, aes(x=Date, y=value, colour = varible, group=variable))+
geom_line(colour = '#00BFFF', size=1) + facet_grid(variable ~ ., scales="free") +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
ggtitle(paste(paste("Plot of ", city, sep=''), " tweets and searches over time", sep='') +
ylab("Searches and Tweets") +
xlab(paste('Normalised searches to and tweets about ', city, sep='')) +
theme(axis.text.x=element_text(size=15))
#  scale_x_date(labels = date_format("%m-%Y"))
)
city <- 'London'
file <- paste('../tidydata/joined/', city, sep='')
file <- paste(file, '.csv',sep='')
data <- read.csv(file)
data <- data[complete.cases(data), ]
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
keeps <- c( "Count", "Date", "NSearches")
data <- data[(names(data) %in% keeps)]
df <- melt(data, id.vars=c("Date"))
ggplot(data=df, aes(x=Date, y=value, colour = varible, group=variable))+
geom_line(colour = '#00BFFF', size=1) + facet_grid(variable ~ ., scales="free") +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
ggtitle(paste(paste("Plot of ", city, sep=''), " tweets and searches over time", sep='')))+
ylab("Searches and Tweets") +
xlab(paste('Normalised searches to and tweets about ', city, sep='')) +
theme(axis.text.x=element_text(size=15))
#  scale_x_date(labels = date_format("%m-%Y"))
city <- 'London'
file <- paste('../tidydata/joined/', city, sep='')
file <- paste(file, '.csv',sep='')
data <- read.csv(file)
data <- data[complete.cases(data), ]
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
keeps <- c( "Count", "Date", "NSearches")
data <- data[(names(data) %in% keeps)]
df <- melt(data, id.vars=c("Date"))
ggplot(data=df, aes(x=Date, y=value, colour = varible, group=variable))+
geom_line(colour = '#00BFFF', size=1) + facet_grid(variable ~ ., scales="free") +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
ggtitle(paste(paste("Plot of ", city, sep=''), " tweets and searches over time", sep=''))+
ylab("Searches and Tweets") +
xlab(paste('Normalised searches to and tweets about ', city, sep='')) +
theme(axis.text.x=element_text(size=15))
#  scale_x_date(labels = date_format("%m-%Y"))
# Destination
city <- 'Ibiza'
file <- paste('../tidydata/joined/', city, sep='')
file <- paste(file, '.csv',sep='')
data <- read.csv(file)
data <- data[complete.cases(data), ]
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
keeps <- c( "Count", "Date", "NSearches")
data <- data[(names(data) %in% keeps)]
df <- melt(data, id.vars=c("Date"))
ggplot(data=df, aes(x=Date, y=value, colour = varible, group=variable))+
geom_line(colour = '#00BFFF', size=1) + facet_grid(variable ~ ., scales="free") +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
ggtitle(paste(paste("Plot of ", city, sep=''), " tweets and searches over time", sep=''))+
ylab("Searches and Tweets") +
xlab(paste('Normalised searches to and tweets about ', city, sep='')) +
theme(axis.text.x=element_text(size=15))
#  scale_x_date(labels = date_format("%m-%Y"))
wrmse <- read.csv('../results/weight-rmse.csv')
View(wrmse)
wrmse$Alpha <- as.character(wrmse$Alpha)
wrmse <- melt(wrmse, idf.vars=c('Alpha'))
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~.,scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Number of hashtags/twitter counts") + ylab("Time") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
View(wrmse)
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~.,scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha")
wrmse <- read.csv('../results/weight-rmse.csv')
wrmse$Alpha <- as.character(wrmse$Alpha)
wrmse <- melt(wrmse, idf.vars=c('Alpha'))
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~.,scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~.,scales='free', ncols=2) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(variable~.,scales='free', ncols=2) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(variable~.,scales='free', ncol=2) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~.,scales='free', ncol=2) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
wrmse <- read.csv('../results/weight-rmse.csv')
wrmse$Alpha <- as.character(wrmse$Alpha)
wrmse <- melt(wrmse, idf.vars=c('Alpha'))
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(.~variable,scales='free', ncol=2) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
wrmse <- read.csv('../results/weight-rmse.csv')
wrmse$Alpha <- as.character(wrmse$Alpha)
wrmse <- melt(wrmse, idf.vars=c('Alpha'))
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(.~variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
wrmse <- read.csv('../results/weight-rmse.csv')
wrmse$Alpha <- as.character(wrmse$Alpha)
wrmse <- melt(wrmse, idf.vars=c('Alpha'))
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(.~variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~., scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
wrmse <- read.csv('../results/weight-rmse.csv')
wrmse$Alpha <- as.character(wrmse$Alpha)
View(wrmse)
wrmse <- read.csv('../results/weight-rmse.csv')
wrmse$Alpha <- as.factor(wrmse$Alpha)
wrmse <- melt(wrmse, idf.vars=c('Alpha'))
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~., scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~., scales='free2, ncol=3) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~., scales='free', ncol=3) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_grid(variable~., ncol=2, scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(variable~., ncol=2, scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(~variable, ncol=2, scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(~variable, ncol=2) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess')
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(~variable, ncol=2, scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess') +
theme(axis.text.x = element_text(angle = 45, size=15, hjust = 1))
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(~variable, ncol=2, scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess') +
theme(axis.text.x = element_text(angle = 45, size=12, hjust = 1))
ggplot(data=wrmse, aes(x=Alpha, y=value, group=variable, colour=variable)) +
geom_line(size=1.2) + facet_wrap(~variable, ncol=2, scales='free') +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("Value of alpha") + ylab("") +
ggtitle("Twitter counts and hashtag counts") +
stat_smooth(method='loess') +
theme(axis.text.x = element_text(angle = 45, size=10, hjust = 1))
stdevdata <- read.csv('../results/stdevscatter2.csv')
drops <- c("Place", "RMSE.TwitterDF", "RMSE.TwitterCF")
stdevdata <- stdevdata[,!(names(stdevdata) %in% drops)]
stdevdata$CFImprove <- as.numeric(stdevdata$CFImprove)
stdevdata$DFImprove <- as.numeric(stdevdata$DFImprove)
stdevdata <- stdevdata[complete.cases(stdevdata), ]
#stdevdata <- do.call(stdevdata,lapply(stdevdata, function(x) replace(x, is.infinite(x),NA)))
stdevdata <- melt(stdevdata, id.vars=c("StDev"))
ggplot(data=stdevdata, aes(x=StDev, y=value, group=variable, colour=variable)) +
geom_point(aes(size=StDev)) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
#scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("Standard deviation of searches divided by the mean") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ") +
stat_smooth(method='loess')
stdevdata <- read.csv('../results/stdevscatter2.csv')
drops <- c("Place", "RMSE.TwitterDF", "RMSE.TwitterCF", 'StDev')
stdevdata <- stdevdata[,!(names(stdevdata) %in% drops)]
stdevdata$CFImprove <- as.numeric(stdevdata$CFImprove)
stdevdata$DFImprove <- as.numeric(stdevdata$DFImprove)
stdevdata <- stdevdata[complete.cases(stdevdata), ]
#stdevdata <- do.call(stdevdata,lapply(stdevdata, function(x) replace(x, is.infinite(x),NA)))
stdevdata <- melt(stdevdata, id.vars=c("RMSE_L4F"))
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(aes(size=StDev)) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
#scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("Standard deviation of searches divided by the mean") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ") +
stat_smooth(method='loess')
View(stdevdata)
stdevdata <- read.csv('../results/stdevscatter2.csv')
View(stdevdata)
drops <- c("Place", "RMSE.TwitterDF", "RMSE.TwitterCF", 'StDev')
stdevdata <- stdevdata[,!(names(stdevdata) %in% drops)]
stdevdata$CFImprove <- as.numeric(stdevdata$CFImprove)
stdevdata$DFImprove <- as.numeric(stdevdata$DFImprove)
stdevdata <- stdevdata[complete.cases(stdevdata), ]
#stdevdata <- do.call(stdevdata,lapply(stdevdata, function(x) replace(x, is.infinite(x),NA)))
stdevdata <- melt(stdevdata, id.vars=c("RMSE_L4F"))
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
#scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("Standard deviation of searches divided by the mean") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ") +
stat_smooth(method='loess')
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
#scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("Standard deviation of searches divided by the mean") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ") +
stat_smooth(method='loess')
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
#scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("Standard deviation of searches divided by the mean") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ")
stdevdata <- read.csv('../results/stdevscatter2.csv')
drops <- c("Place", "RMSE.TwitterDF", "RMSE.TwitterCF", 'StDev')
stdevdata <- stdevdata[,!(names(stdevdata) %in% drops)]
stdevdata$CFImprove <- as.numeric(stdevdata$CFImprove)
stdevdata$DFImprove <- as.numeric(stdevdata$DFImprove)
stdevdata <- stdevdata[complete.cases(stdevdata), ]
#stdevdata <- do.call(stdevdata,lapply(stdevdata, function(x) replace(x, is.infinite(x),NA)))
stdevdata <- melt(stdevdata, id.vars=c("RMSE_L4F"))
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
#scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("RMSE L4F") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ")
#stat_smooth(method='loess')
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("RMSE L4F") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ")
#stat_smooth(method='loess')
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("RMSE L4F") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ") +
stat_smooth(method='loess')
stdevdata <- read.csv('../results/stdevscatter2.csv')
drops <- c("Place", "RMSE.TwitterDF", "RMSE.TwitterCF", 'StDev', 'CFImprove')
stdevdata <- stdevdata[,!(names(stdevdata) %in% drops)]
stdevdata$CFImprove <- as.numeric(stdevdata$CFImprove)
stdevdata$DFImprove <- as.numeric(stdevdata$DFImprove)
stdevdata <- stdevdata[complete.cases(stdevdata), ]
#stdevdata <- do.call(stdevdata,lapply(stdevdata, function(x) replace(x, is.infinite(x),NA)))
stdevdata <- melt(stdevdata, id.vars=c("RMSE_L4F"))
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("RMSE L4F") +
ylab("Percentage improvement") +
ggtitle("RMSE of models versus normlalised STDEV of searches ") +
stat_smooth(method='loess')
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("RMSE L4F") +
ylab("Percentage improvement") +
ggtitle("Improvement in RMSE against L4F RMSE.") +
stat_smooth(method='loess')
ggplot(data=stdevdata, aes(x=RMSE_L4F, y=value, group=variable, colour=variable)) +
geom_point(size=1.5) + facet_grid(variable ~ .) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
scale_x_log10() + #scale_y_log10() +
scale_y_continuous(limits=c(-0.8,0.8),labels = percent) +
xlab("RMSE L4F") +
ylab("Percentage improvement") +
ggtitle("Improvement in RMSE in TwitterDF against L4F RMSE.") +
stat_smooth(method='loess')
data <- read.csv('../tidydata/joined/OVERALL.csv')
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
ggplot(data=data, aes(x=Date, y=NSearches)) +
geom_line(aes(x=Date,y=Count), colour = '#FF6347', size=1)+
geom_line(colour = '#4B0082', size=1) +
xlab("Month") + ylab("Normalised searches") +
ggtitle("Plot of all searches over time")
View(data)
data <- read.csv('../tidydata/joined/OVERALL.csv')
data$Date <- as.Date(data$Date,format="%d%/%m/%Y") #-%m-%d")
ggplot(data=data, aes(x=Date, y=NSearches)) +
geom_line(aes(x=Date,y=Count), colour = '#FF6347', size=1)+
geom_line(colour = '#4B0082', size=1) +
xlab("Month") + ylab("Normalised searches") +
ggtitle("Plot of all searches over time")
data <- read.csv('../tidydata/joined/OVERALL.csv')
data$Date <- as.Date(data$Date,format="%d%/%m/%Y") #-%m-%d")
data <- data[complete.cases(data), ]
ggplot(data=data, aes(x=Date, y=NSearches)) +
geom_line(aes(x=Date,y=Count), colour = '#FF6347', size=1)+
geom_line(colour = '#4B0082', size=1) +
xlab("Month") + ylab("Normalised searches") +
ggtitle("Plot of all searches over time")
# +  scale_x_date(labels = date_format("%m-%Y"))
View(data)
data <- read.csv('../tidydata/joined/OVERALL.csv')
View(data)
data$Date <- as.Date(data$Date,format="%d%/%m/%Y") #-%m-%d")
ggplot(data=data, aes(x=Date, y=NSearches)) +
geom_line(aes(x=Date,y=Count), colour = '#FF6347', size=1)+
geom_line(colour = '#4B0082', size=1) +
xlab("Month") + ylab("Normalised searches") +
ggtitle("Plot of all searches over time")
ggplot(data=data, aes(x=Date, y=NSearches)) +
#geom_line(aes(x=Date,y=Count), colour = '#FF6347', size=1)+
geom_line(colour = '#4B0082', size=1) +
xlab("Month") + ylab("Normalised searches") +
ggtitle("Plot of all searches over time")
View(data)
city <- 'Sochi'
file <- paste('../tidydata/joined/', city, sep='')
file <- paste(file, '.csv',sep='')
data <- read.csv(file)
data <- data[complete.cases(data), ]
data$Date <- as.Date(data$Date,format="%Y-%m-%d")
keeps <- c( "Count", "Date", "NSearches")
data <- data[(names(data) %in% keeps)]
df <- melt(data, id.vars=c("Date"))
ggplot(data=df, aes(x=Date, y=value, colour = varible, group=variable))+
geom_line(colour = '#00BFFF', size=1) + facet_grid(variable ~ ., scales="free") +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
ggtitle(paste(paste("Plot of ", city, sep=''), " tweets and searches over time", sep=''))+
ylab("Searches and Tweets") +
xlab(paste('Normalised searches to and tweets about ', city, sep='')) +
theme(axis.text.x=element_text(size=15))
