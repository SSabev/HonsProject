library(ggplot2)
library(reshape)
library(scales)
setwd('Dev/HonsProject/Work/Rscripts')
i = 'Sochi'
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
#ggobj =
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
stat_smooth(method='loess') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
View(df)
i = 'Sochi'
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
df <- read.csv(file)
View(df)
View(df)
View(df)
i = 'Sochi'
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
#ggobj =
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
stat_smooth(method='loess') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
stat_smooth(y ~ x) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
#ggobj =
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
stat_smooth(formula = y ~ x) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
i = 'Sochi'
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
max.val <- max(data$RMSE.TwitterCF)
nx = seq(1, max.val-1, by=max.val/1367)
ny = seq(1, max.val-1, by=max.val/1367)
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
#ggobj =
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_line(aes(x=nx, y=ny), size=1, colour="#4B0082")+
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
View(df)
i = 'Sochi'
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
max.val <- max(df$TwitterDF)
nx <- seq(1, max.val-1, by=max.val/1367)
ny <- seq(1, max.val-1, by=max.val/1367)
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
#ggobj =
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_line(aes(x=nx, y=ny), size=1, colour="#4B0082")+
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
max.val <- max(df$TwitterDF)
nx <- seq(1, max.val-1, by=max.val/1367)
ny <- seq(1, max.val-1, by=max.val/1367)
df <- read.csv(file)
View(df)
max.val <- max(df)
max.val <- max(df)
nx <- seq(1, max.val-1, by=max.val/175)
ny <- seq(1, max.val-1, by=max.val/175)
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
#ggobj =
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_line(aes(x=nx, y=ny), size=1, colour="#4B0082")+
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_line(aes(x=nx, y=ny), size=1)+
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_line(aes(x=nx, y=ny))+
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
fix(nx)
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_line(aes(x=nx, y=ny) )+
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_abline() +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_abline(aes(colour=variable)) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
destinations = c('Prague','Lisbon','Morocco','Los Angeles','Dubai','Tenerife',
'Austria','Singapore','Tokyo','Sweden','South Korea','Mexico',
'Hungary','Hong Kong','Palma','Vietnam','Manchester','Budapest',
'Alicante','Frankfurt','Norway','Croatia','Belgium','Kuala Lumpur','New Zealand',
'Phuket','Seoul','Denmark','Brussels','Cyprus','Vienna','Venice','Miami',
'Stockholm','St Petersburg','Copenhagen','Spain','United States','United Kingdom',
'Italy','London','Russia','Germany','France','Thailand','Turkey',
'Greece','New York','Australia','Bangkok','Paris','Barcelona','Portugal',
'India','Netherlands','Istanbul','Rome','Brazil','China','Amsterdam',
'Munich','Moscow','Indonesia','Japan','Milan','Canada','Ireland',
'Madrid','Sochi','Poland','Berlin','Switzerland','Dublin','Czech Republic',
'United Arab Emirates','Malaga','Philippines','Athens','Malaysia')
for (i in destinations){
i = 'Sochi'
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
max.val <- max(df)
nx <- seq(1, max.val-1, by=max.val/175)
ny <- seq(1, max.val-1, by=max.val/175)
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
ggobj = ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_abline(aes(colour=variable)) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
print(ggobj)
ggsave(sprintf("../../write-up/plots/%s.pdf", i))
}
destinations = c('Prague','Lisbon','Morocco','Los Angeles','Dubai','Tenerife',
'Austria','Singapore','Tokyo','Sweden','South Korea','Mexico',
'Hungary','Hong Kong','Palma','Vietnam','Manchester','Budapest',
'Alicante','Frankfurt','Norway','Croatia','Belgium','Kuala Lumpur','New Zealand',
'Phuket','Seoul','Denmark','Brussels','Cyprus','Vienna','Venice','Miami',
'Stockholm','St Petersburg','Copenhagen','Spain','United States','United Kingdom',
'Italy','London','Russia','Germany','France','Thailand','Turkey',
'Greece','New York','Australia','Bangkok','Paris','Barcelona','Portugal',
'India','Netherlands','Istanbul','Rome','Brazil','China','Amsterdam',
'Munich','Moscow','Indonesia','Japan','Milan','Canada','Ireland',
'Madrid','Sochi','Poland','Berlin','Switzerland','Dublin','Czech Republic',
'United Arab Emirates','Malaga','Philippines','Athens','Malaysia')
for (i in destinations){
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
max.val <- max(df)
nx <- seq(1, max.val-1, by=max.val/175)
ny <- seq(1, max.val-1, by=max.val/175)
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
ggobj = ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_abline(aes(colour=variable)) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
print(ggobj)
ggsave(sprintf("../../write-up/plots/%s.pdf", i))
}
View(df)
fix(nx)
i='Sochi'
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
max.val <- max(df)
nx <- seq(1, max.val-1, by=max.val/175)
ny <- seq(1, max.val-1, by=max.val/175)
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
ggobj = ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_abline(aes(colour=variable)) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
print(ggobj)
ggsave(sprintf("../../write-up/plots/%s.pdf", i))
i='Tenerife'
file = paste('../tidydata/predictions/', i, sep='')
file = paste(file, '.csv',sep='')
max.val <- max(df)
nx <- seq(1, max.val-1, by=max.val/175)
ny <- seq(1, max.val-1, by=max.val/175)
df <- read.csv(file)
df <- melt(df, id.vars=c("Actual"))
ggobj = ggplot(data=df, aes(x=Actual, y=value, group=variable, colour=variable)) +
geom_point(size=3) + facet_grid(. ~ variable) +
scale_color_manual(values=c("#4B0082", "#FF6347", '#9ACD32', '#EE82EE')) +
geom_abline(aes(colour=variable)) +
xlab("True searches") + ylab("Predicted searches") +
ggtitle("Scatter plot of all the different predictions against the actual values") +
#stat_smooth(formula = y ~ x, method='lm') +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()
)
print(ggobj)
ggsave(sprintf("../../write-up/plots/%s.pdf", i))
